// Mocks generated by Mockito 5.4.4 from annotations
// in detail/test/helpers/test_helper.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i9;
import 'dart:convert' as _i14;
import 'dart:typed_data' as _i16;

import 'package:core/core.dart' as _i24;
import 'package:core/data/db/database_helper.dart' as _i8;
import 'package:core/data/models/movie_detail_model.dart' as _i5;
import 'package:core/data/models/movie_model.dart' as _i21;
import 'package:core/data/models/movie_table.dart' as _i11;
import 'package:core/data/models/series_detail_model.dart' as _i6;
import 'package:core/data/models/series_model.dart' as _i22;
import 'package:core/domain/entities/movie.dart' as _i19;
import 'package:core/domain/entities/movie_detail.dart' as _i18;
import 'package:core/utils/failure.dart' as _i17;
import 'package:dartz/dartz.dart' as _i4;
import 'package:detail/data/datasources/detail_local_data_source.dart' as _i23;
import 'package:detail/data/datasources/detail_remote_data_source.dart' as _i20;
import 'package:detail/domain/repositories/detail_repository.dart' as _i7;
import 'package:detail/domain/usecases/get_movie_detail.dart' as _i25;
import 'package:detail/domain/usecases/get_movie_recommendations.dart' as _i27;
import 'package:detail/domain/usecases/get_series_detail.dart' as _i26;
import 'package:detail/domain/usecases/get_series_recommendations.dart' as _i28;
import 'package:detail/domain/usecases/get_watchlist_status.dart' as _i31;
import 'package:detail/domain/usecases/remove_watchlist.dart' as _i30;
import 'package:detail/domain/usecases/save_watchlist.dart' as _i29;
import 'package:http/io_client.dart' as _i12;
import 'package:http/src/base_request.dart' as _i13;
import 'package:http/src/io_streamed_response.dart' as _i2;
import 'package:http/src/response.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i15;
import 'package:sqflite/sqflite.dart' as _i10;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeIOStreamedResponse_0 extends _i1.SmartFake
    implements _i2.IOStreamedResponse {
  _FakeIOStreamedResponse_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeResponse_1 extends _i1.SmartFake implements _i3.Response {
  _FakeResponse_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeEither_2<L, R> extends _i1.SmartFake implements _i4.Either<L, R> {
  _FakeEither_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeMovieDetailResponse_3 extends _i1.SmartFake
    implements _i5.MovieDetailResponse {
  _FakeMovieDetailResponse_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSeriesDetailResponse_4 extends _i1.SmartFake
    implements _i6.SeriesDetailResponse {
  _FakeSeriesDetailResponse_4(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeDetailRepository_5 extends _i1.SmartFake
    implements _i7.DetailRepository {
  _FakeDetailRepository_5(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [DatabaseHelper].
///
/// See the documentation for Mockito's code generation for more information.
class MockDatabaseHelper extends _i1.Mock implements _i8.DatabaseHelper {
  MockDatabaseHelper() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i9.Future<_i10.Database?> get database => (super.noSuchMethod(
        Invocation.getter(#database),
        returnValue: _i9.Future<_i10.Database?>.value(),
      ) as _i9.Future<_i10.Database?>);

  @override
  _i9.Future<void> insertCacheTransaction(
    List<_i11.MovieTable>? movies,
    String? category,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #insertCacheTransaction,
          [
            movies,
            category,
          ],
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);

  @override
  _i9.Future<List<Map<String, dynamic>>> getCacheMovies(String? category) =>
      (super.noSuchMethod(
        Invocation.method(
          #getCacheMovies,
          [category],
        ),
        returnValue: _i9.Future<List<Map<String, dynamic>>>.value(
            <Map<String, dynamic>>[]),
      ) as _i9.Future<List<Map<String, dynamic>>>);

  @override
  _i9.Future<int> clearCache(String? category) => (super.noSuchMethod(
        Invocation.method(
          #clearCache,
          [category],
        ),
        returnValue: _i9.Future<int>.value(0),
      ) as _i9.Future<int>);

  @override
  _i9.Future<int> insertWatchlist(_i11.MovieTable? movie) =>
      (super.noSuchMethod(
        Invocation.method(
          #insertWatchlist,
          [movie],
        ),
        returnValue: _i9.Future<int>.value(0),
      ) as _i9.Future<int>);

  @override
  _i9.Future<int> removeWatchlist(_i11.MovieTable? movie) =>
      (super.noSuchMethod(
        Invocation.method(
          #removeWatchlist,
          [movie],
        ),
        returnValue: _i9.Future<int>.value(0),
      ) as _i9.Future<int>);

  @override
  _i9.Future<Map<String, dynamic>?> getMovieById(int? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #getMovieById,
          [id],
        ),
        returnValue: _i9.Future<Map<String, dynamic>?>.value(),
      ) as _i9.Future<Map<String, dynamic>?>);

  @override
  _i9.Future<List<Map<String, dynamic>>> getWatchlistMovies() =>
      (super.noSuchMethod(
        Invocation.method(
          #getWatchlistMovies,
          [],
        ),
        returnValue: _i9.Future<List<Map<String, dynamic>>>.value(
            <Map<String, dynamic>>[]),
      ) as _i9.Future<List<Map<String, dynamic>>>);
}

/// A class which mocks [IOClient].
///
/// See the documentation for Mockito's code generation for more information.
class MockIOClient extends _i1.Mock implements _i12.IOClient {
  MockIOClient() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i9.Future<_i2.IOStreamedResponse> send(_i13.BaseRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #send,
          [request],
        ),
        returnValue:
            _i9.Future<_i2.IOStreamedResponse>.value(_FakeIOStreamedResponse_0(
          this,
          Invocation.method(
            #send,
            [request],
          ),
        )),
      ) as _i9.Future<_i2.IOStreamedResponse>);

  @override
  void close() => super.noSuchMethod(
        Invocation.method(
          #close,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i9.Future<_i3.Response> head(
    Uri? url, {
    Map<String, String>? headers,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #head,
          [url],
          {#headers: headers},
        ),
        returnValue: _i9.Future<_i3.Response>.value(_FakeResponse_1(
          this,
          Invocation.method(
            #head,
            [url],
            {#headers: headers},
          ),
        )),
      ) as _i9.Future<_i3.Response>);

  @override
  _i9.Future<_i3.Response> get(
    Uri? url, {
    Map<String, String>? headers,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #get,
          [url],
          {#headers: headers},
        ),
        returnValue: _i9.Future<_i3.Response>.value(_FakeResponse_1(
          this,
          Invocation.method(
            #get,
            [url],
            {#headers: headers},
          ),
        )),
      ) as _i9.Future<_i3.Response>);

  @override
  _i9.Future<_i3.Response> post(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    _i14.Encoding? encoding,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #post,
          [url],
          {
            #headers: headers,
            #body: body,
            #encoding: encoding,
          },
        ),
        returnValue: _i9.Future<_i3.Response>.value(_FakeResponse_1(
          this,
          Invocation.method(
            #post,
            [url],
            {
              #headers: headers,
              #body: body,
              #encoding: encoding,
            },
          ),
        )),
      ) as _i9.Future<_i3.Response>);

  @override
  _i9.Future<_i3.Response> put(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    _i14.Encoding? encoding,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #put,
          [url],
          {
            #headers: headers,
            #body: body,
            #encoding: encoding,
          },
        ),
        returnValue: _i9.Future<_i3.Response>.value(_FakeResponse_1(
          this,
          Invocation.method(
            #put,
            [url],
            {
              #headers: headers,
              #body: body,
              #encoding: encoding,
            },
          ),
        )),
      ) as _i9.Future<_i3.Response>);

  @override
  _i9.Future<_i3.Response> patch(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    _i14.Encoding? encoding,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #patch,
          [url],
          {
            #headers: headers,
            #body: body,
            #encoding: encoding,
          },
        ),
        returnValue: _i9.Future<_i3.Response>.value(_FakeResponse_1(
          this,
          Invocation.method(
            #patch,
            [url],
            {
              #headers: headers,
              #body: body,
              #encoding: encoding,
            },
          ),
        )),
      ) as _i9.Future<_i3.Response>);

  @override
  _i9.Future<_i3.Response> delete(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    _i14.Encoding? encoding,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #delete,
          [url],
          {
            #headers: headers,
            #body: body,
            #encoding: encoding,
          },
        ),
        returnValue: _i9.Future<_i3.Response>.value(_FakeResponse_1(
          this,
          Invocation.method(
            #delete,
            [url],
            {
              #headers: headers,
              #body: body,
              #encoding: encoding,
            },
          ),
        )),
      ) as _i9.Future<_i3.Response>);

  @override
  _i9.Future<String> read(
    Uri? url, {
    Map<String, String>? headers,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #read,
          [url],
          {#headers: headers},
        ),
        returnValue: _i9.Future<String>.value(_i15.dummyValue<String>(
          this,
          Invocation.method(
            #read,
            [url],
            {#headers: headers},
          ),
        )),
      ) as _i9.Future<String>);

  @override
  _i9.Future<_i16.Uint8List> readBytes(
    Uri? url, {
    Map<String, String>? headers,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #readBytes,
          [url],
          {#headers: headers},
        ),
        returnValue: _i9.Future<_i16.Uint8List>.value(_i16.Uint8List(0)),
      ) as _i9.Future<_i16.Uint8List>);
}

/// A class which mocks [DetailRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockDetailRepository extends _i1.Mock implements _i7.DetailRepository {
  MockDetailRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i9.Future<_i4.Either<_i17.Failure, _i18.MovieDetail>> getMovieDetail(
          int? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #getMovieDetail,
          [id],
        ),
        returnValue:
            _i9.Future<_i4.Either<_i17.Failure, _i18.MovieDetail>>.value(
                _FakeEither_2<_i17.Failure, _i18.MovieDetail>(
          this,
          Invocation.method(
            #getMovieDetail,
            [id],
          ),
        )),
      ) as _i9.Future<_i4.Either<_i17.Failure, _i18.MovieDetail>>);

  @override
  _i9.Future<_i4.Either<_i17.Failure, List<_i19.Movie>>>
      getMovieRecommendations(int? id) => (super.noSuchMethod(
            Invocation.method(
              #getMovieRecommendations,
              [id],
            ),
            returnValue:
                _i9.Future<_i4.Either<_i17.Failure, List<_i19.Movie>>>.value(
                    _FakeEither_2<_i17.Failure, List<_i19.Movie>>(
              this,
              Invocation.method(
                #getMovieRecommendations,
                [id],
              ),
            )),
          ) as _i9.Future<_i4.Either<_i17.Failure, List<_i19.Movie>>>);

  @override
  _i9.Future<_i4.Either<_i17.Failure, _i18.MovieDetail>> getSeriesDetail(
          int? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #getSeriesDetail,
          [id],
        ),
        returnValue:
            _i9.Future<_i4.Either<_i17.Failure, _i18.MovieDetail>>.value(
                _FakeEither_2<_i17.Failure, _i18.MovieDetail>(
          this,
          Invocation.method(
            #getSeriesDetail,
            [id],
          ),
        )),
      ) as _i9.Future<_i4.Either<_i17.Failure, _i18.MovieDetail>>);

  @override
  _i9.Future<_i4.Either<_i17.Failure, List<_i19.Movie>>>
      getSeriesRecommendations(int? id) => (super.noSuchMethod(
            Invocation.method(
              #getSeriesRecommendations,
              [id],
            ),
            returnValue:
                _i9.Future<_i4.Either<_i17.Failure, List<_i19.Movie>>>.value(
                    _FakeEither_2<_i17.Failure, List<_i19.Movie>>(
              this,
              Invocation.method(
                #getSeriesRecommendations,
                [id],
              ),
            )),
          ) as _i9.Future<_i4.Either<_i17.Failure, List<_i19.Movie>>>);

  @override
  _i9.Future<_i4.Either<_i17.Failure, String>> saveWatchlist(
          _i18.MovieDetail? movie) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveWatchlist,
          [movie],
        ),
        returnValue: _i9.Future<_i4.Either<_i17.Failure, String>>.value(
            _FakeEither_2<_i17.Failure, String>(
          this,
          Invocation.method(
            #saveWatchlist,
            [movie],
          ),
        )),
      ) as _i9.Future<_i4.Either<_i17.Failure, String>>);

  @override
  _i9.Future<_i4.Either<_i17.Failure, String>> removeWatchlist(
          _i18.MovieDetail? movie) =>
      (super.noSuchMethod(
        Invocation.method(
          #removeWatchlist,
          [movie],
        ),
        returnValue: _i9.Future<_i4.Either<_i17.Failure, String>>.value(
            _FakeEither_2<_i17.Failure, String>(
          this,
          Invocation.method(
            #removeWatchlist,
            [movie],
          ),
        )),
      ) as _i9.Future<_i4.Either<_i17.Failure, String>>);

  @override
  _i9.Future<bool> isAddedToWatchlist(int? id) => (super.noSuchMethod(
        Invocation.method(
          #isAddedToWatchlist,
          [id],
        ),
        returnValue: _i9.Future<bool>.value(false),
      ) as _i9.Future<bool>);
}

/// A class which mocks [DetailRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockDetailRemoteDataSource extends _i1.Mock
    implements _i20.DetailRemoteDataSource {
  MockDetailRemoteDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i9.Future<_i5.MovieDetailResponse> getMovieDetail(int? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #getMovieDetail,
          [id],
        ),
        returnValue: _i9.Future<_i5.MovieDetailResponse>.value(
            _FakeMovieDetailResponse_3(
          this,
          Invocation.method(
            #getMovieDetail,
            [id],
          ),
        )),
      ) as _i9.Future<_i5.MovieDetailResponse>);

  @override
  _i9.Future<List<_i21.MovieModel>> getMovieRecommendations(int? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #getMovieRecommendations,
          [id],
        ),
        returnValue:
            _i9.Future<List<_i21.MovieModel>>.value(<_i21.MovieModel>[]),
      ) as _i9.Future<List<_i21.MovieModel>>);

  @override
  _i9.Future<_i6.SeriesDetailResponse> getSeriesDetail(int? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #getSeriesDetail,
          [id],
        ),
        returnValue: _i9.Future<_i6.SeriesDetailResponse>.value(
            _FakeSeriesDetailResponse_4(
          this,
          Invocation.method(
            #getSeriesDetail,
            [id],
          ),
        )),
      ) as _i9.Future<_i6.SeriesDetailResponse>);

  @override
  _i9.Future<List<_i22.SeriesModel>> getSeriesRecommendations(int? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #getSeriesRecommendations,
          [id],
        ),
        returnValue:
            _i9.Future<List<_i22.SeriesModel>>.value(<_i22.SeriesModel>[]),
      ) as _i9.Future<List<_i22.SeriesModel>>);
}

/// A class which mocks [DetailLocalDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockDetailLocalDataSource extends _i1.Mock
    implements _i23.DetailLocalDataSource {
  MockDetailLocalDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i9.Future<String> insertWatchlist(_i11.MovieTable? movie) =>
      (super.noSuchMethod(
        Invocation.method(
          #insertWatchlist,
          [movie],
        ),
        returnValue: _i9.Future<String>.value(_i15.dummyValue<String>(
          this,
          Invocation.method(
            #insertWatchlist,
            [movie],
          ),
        )),
      ) as _i9.Future<String>);

  @override
  _i9.Future<String> removeWatchlist(_i11.MovieTable? movie) =>
      (super.noSuchMethod(
        Invocation.method(
          #removeWatchlist,
          [movie],
        ),
        returnValue: _i9.Future<String>.value(_i15.dummyValue<String>(
          this,
          Invocation.method(
            #removeWatchlist,
            [movie],
          ),
        )),
      ) as _i9.Future<String>);

  @override
  _i9.Future<_i11.MovieTable?> getMovieById(int? id) => (super.noSuchMethod(
        Invocation.method(
          #getMovieById,
          [id],
        ),
        returnValue: _i9.Future<_i11.MovieTable?>.value(),
      ) as _i9.Future<_i11.MovieTable?>);
}

/// A class which mocks [NetworkInfo].
///
/// See the documentation for Mockito's code generation for more information.
class MockNetworkInfo extends _i1.Mock implements _i24.NetworkInfo {
  MockNetworkInfo() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i9.Future<bool> get isConnected => (super.noSuchMethod(
        Invocation.getter(#isConnected),
        returnValue: _i9.Future<bool>.value(false),
      ) as _i9.Future<bool>);
}

/// A class which mocks [GetMovieDetail].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetMovieDetail extends _i1.Mock implements _i25.GetMovieDetail {
  MockGetMovieDetail() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i7.DetailRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeDetailRepository_5(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i7.DetailRepository);

  @override
  _i9.Future<_i4.Either<_i17.Failure, _i18.MovieDetail>> execute(int? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #execute,
          [id],
        ),
        returnValue:
            _i9.Future<_i4.Either<_i17.Failure, _i18.MovieDetail>>.value(
                _FakeEither_2<_i17.Failure, _i18.MovieDetail>(
          this,
          Invocation.method(
            #execute,
            [id],
          ),
        )),
      ) as _i9.Future<_i4.Either<_i17.Failure, _i18.MovieDetail>>);
}

/// A class which mocks [GetSeriesDetail].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetSeriesDetail extends _i1.Mock implements _i26.GetSeriesDetail {
  MockGetSeriesDetail() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i7.DetailRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeDetailRepository_5(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i7.DetailRepository);

  @override
  _i9.Future<_i4.Either<_i17.Failure, _i18.MovieDetail>> execute(int? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #execute,
          [id],
        ),
        returnValue:
            _i9.Future<_i4.Either<_i17.Failure, _i18.MovieDetail>>.value(
                _FakeEither_2<_i17.Failure, _i18.MovieDetail>(
          this,
          Invocation.method(
            #execute,
            [id],
          ),
        )),
      ) as _i9.Future<_i4.Either<_i17.Failure, _i18.MovieDetail>>);
}

/// A class which mocks [GetMovieRecommendations].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetMovieRecommendations extends _i1.Mock
    implements _i27.GetMovieRecommendations {
  MockGetMovieRecommendations() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i7.DetailRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeDetailRepository_5(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i7.DetailRepository);

  @override
  _i9.Future<_i4.Either<_i17.Failure, List<_i19.Movie>>> execute(dynamic id) =>
      (super.noSuchMethod(
        Invocation.method(
          #execute,
          [id],
        ),
        returnValue:
            _i9.Future<_i4.Either<_i17.Failure, List<_i19.Movie>>>.value(
                _FakeEither_2<_i17.Failure, List<_i19.Movie>>(
          this,
          Invocation.method(
            #execute,
            [id],
          ),
        )),
      ) as _i9.Future<_i4.Either<_i17.Failure, List<_i19.Movie>>>);
}

/// A class which mocks [GetSeriesRecommendations].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetSeriesRecommendations extends _i1.Mock
    implements _i28.GetSeriesRecommendations {
  MockGetSeriesRecommendations() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i7.DetailRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeDetailRepository_5(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i7.DetailRepository);

  @override
  _i9.Future<_i4.Either<_i17.Failure, List<_i19.Movie>>> execute(dynamic id) =>
      (super.noSuchMethod(
        Invocation.method(
          #execute,
          [id],
        ),
        returnValue:
            _i9.Future<_i4.Either<_i17.Failure, List<_i19.Movie>>>.value(
                _FakeEither_2<_i17.Failure, List<_i19.Movie>>(
          this,
          Invocation.method(
            #execute,
            [id],
          ),
        )),
      ) as _i9.Future<_i4.Either<_i17.Failure, List<_i19.Movie>>>);
}

/// A class which mocks [SaveWatchlist].
///
/// See the documentation for Mockito's code generation for more information.
class MockSaveWatchlist extends _i1.Mock implements _i29.SaveWatchlist {
  MockSaveWatchlist() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i7.DetailRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeDetailRepository_5(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i7.DetailRepository);

  @override
  _i9.Future<_i4.Either<_i17.Failure, String>> execute(
          _i18.MovieDetail? movie) =>
      (super.noSuchMethod(
        Invocation.method(
          #execute,
          [movie],
        ),
        returnValue: _i9.Future<_i4.Either<_i17.Failure, String>>.value(
            _FakeEither_2<_i17.Failure, String>(
          this,
          Invocation.method(
            #execute,
            [movie],
          ),
        )),
      ) as _i9.Future<_i4.Either<_i17.Failure, String>>);
}

/// A class which mocks [RemoveWatchlist].
///
/// See the documentation for Mockito's code generation for more information.
class MockRemoveWatchlist extends _i1.Mock implements _i30.RemoveWatchlist {
  MockRemoveWatchlist() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i7.DetailRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeDetailRepository_5(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i7.DetailRepository);

  @override
  _i9.Future<_i4.Either<_i17.Failure, String>> execute(
          _i18.MovieDetail? movie) =>
      (super.noSuchMethod(
        Invocation.method(
          #execute,
          [movie],
        ),
        returnValue: _i9.Future<_i4.Either<_i17.Failure, String>>.value(
            _FakeEither_2<_i17.Failure, String>(
          this,
          Invocation.method(
            #execute,
            [movie],
          ),
        )),
      ) as _i9.Future<_i4.Either<_i17.Failure, String>>);
}

/// A class which mocks [GetWatchListStatus].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetWatchListStatus extends _i1.Mock
    implements _i31.GetWatchListStatus {
  MockGetWatchListStatus() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i7.DetailRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeDetailRepository_5(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i7.DetailRepository);

  @override
  _i9.Future<bool> execute(int? id) => (super.noSuchMethod(
        Invocation.method(
          #execute,
          [id],
        ),
        returnValue: _i9.Future<bool>.value(false),
      ) as _i9.Future<bool>);
}
